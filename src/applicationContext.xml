<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 扫描base-package下的类将其添加到ioc容器中 -->
	<context:component-scan base-package="com.lw.springdata_jpa"></context:component-scan>
	
	<!-- 1、配置数据源 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>	
		<!-- 还可以配置其它属性 -->
	</bean>
	<!-- 2、配置jpa的EntityManagerFactory====>相当于session的SessionFactoryBean -->
	<bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- jpa实现产品的实现器 -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<!-- 配置添加扫描entity注解的包 -->
		<property name="packagesToScan" value="com.lw.springdata_jpa"></property>
		
		<!-- 配置jpa的属性，具体是jpa实现产品的属性，这里就是hibernate -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	<!-- 3、配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactoryBean"></property>
	</bean>
	<!-- 4、配置支持注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- 5、配置Springdata -->	
	<!-- 加入jpa的命名空间 -->
	<!-- base-package:扫描Repository所在的package -->
	<jpa:repositories base-package="com.lw.springdata_jpa"
		entity-manager-factory-ref="entityManagerFactoryBean"
		></jpa:repositories>
	
</beans>
